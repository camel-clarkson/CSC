Cyber Camp 1.0 2022
======================

# Summary and Audience
Cyber Camp 1.0 provides hands-on learning in the areas of networking, computer administration, malware, and basic scripting, with a security focus. The camp encourages critical thinking, applied learning, and engineering methods and reasoning. Cyber Camp 1.0 is great for those students who want to get a taste of computer/IT technician and feel what it is like to manage a computer system. The camp is geared towards students in Grades 9-12. No prior experience is required.

# Objective
The objective of Cyber Camp 1.0 is to introduce and prepare students about the basic concepts in cyber security. The camp begins with the campers learning Linux operating system and Linux commands. Students will then learn how to administer a computer system, while providing user services and maintaining security.

# Goals
- Have Fun Learning
- Get Students Interested in STEM

# Basic Rules
- Be Respectful
- Don't be a Distraction to Others' Learning

# Outline

## Day 1 - Intro to Linux

### Welcome and Intro
  - Teachers
  - Students
    - Name
    - Grade
    - School
    - What do you expect to learn?
    - What major do you want to choose in college?

### Install MobaXterm (for Windows user)
- Install [MobaXterm](https://mobaxterm.mobatek.net/download.html) (The Free Home Edition) 
- Watch the [MobaXterm live demo](https://mobaxterm.mobatek.net/demo.html) to see how to setup the SSH connection

<!-- ### Install XQuartz (for Mac user)
- Install [XQuartz](https://www.xquartz.org/)
- Reboot
  - Install [PUTTY](https://www.putty.org/) (if using Windows)
-->

### Open and use the Terminal app (for Mac user)
- [Instructions](https://www.howtogeek.com/682770/how-to-open-the-terminal-on-a-mac/)

### Connect to the Server
- Username is `<firstletter><lastname>` all in lowercase and the password is `password`, e.g., for John Doe the username is `jdoe`
- Connect to the Linux server using SSH at this IP address: 3.12.96.179, e.g, `ssh jdoe@3.12.96.179`

### Exercise: Changing Your Password
- Use the `passwd` command to update your password
- Enter your old password and then your new one. DON'T FORGET IT!

### Exercise: Finding the Secret File
- Linux `cat <filename>` command to see the contents of file
- Run `ls` to see the list of files in the current directory
- Now try `ls -a` what is different?
- Find the secret file and message of the instructors with its content on Zoom

<!--
### Intro to Virtual Machines
  - [What is a Virtual Machine (VM)?]
  - [Why VM?](https://www.linkedin.com/learning/learning-vmware-vsphere-6-5/why-virtual-machines)
  - What happens when you press Power - [Boot Process](https://youtu.be/RgLMBXg5b9I)
  - [Linux Boot Process](https://www.thegeekstuff.com/2011/02/linux-boot-process)
  - If you want to install your own Linux Virtual Machine, here are a couple of reference links:
     - [Reference Tutorial 1](https://www.lifewire.com/run-ubuntu-within-windows-virtualbox-2202098)
     - [Reference Tutorial 2](https://askubuntu.com/questions/142549/how-to-install-ubuntu-on-virtualbox)
 -->
 
### Intro to Unix/Linux
- [Unix history](https://youtu.be/7FjX7r5icV8)
- [The story of Linux](https://youtu.be/5ocq6_3-nEw)
- [How Linux is built](https://youtu.be/yVpbFMhOAwE)

## Day 2 - Intro to the Command Line

### Linux fundamentals: Basic Commands
  For each of the commands below (three per group), provide the following:
   1. Commands Name
   2. What it does
   3. One or two examples illustrating their usage
      - man
      - ls
      - cat
      - passwd
   - Group1:
      - cd
      - whoami
      - mkdir
   - Group2:
      - who
      - pwd
      - history
   - Group3:
      - cp
      - mv
      - rm
   - Group4:
      - wc
      - echo
      - w

<!--
- alias
- wget
- more
- less
- tail
- head
-->

### [Linux File System](https://www.youtube.com/watch?v=HIXzJ3Rz9po)
- How do you find your home directory?
- How do you navigate the file system?

### Editing Files in Linux
- Use the command `vim <filename>` to edit files
- Vim is a very powerful editor, see [vim tutorial](https://www.openvim.com/)
- Take save and exit a file type `:wq` for write and quit



## Day 3 - Grep and Regular Expression
### Using VIM to write your first C program
<!--- [cat command](https://www.cyberciti.biz/faq/cat-line-numbers-and-ranges-under-unix-linux/)-->
- [First c program](http://www.cs.cornell.edu/courses/cs113/2006fa/Write_Your_First_C_Program.html)
<!--- Use vim to create `hello.c` and type in the following program
```c
#include <stdio.h>

int main() {
	printf("Hello World!");
	return 0;
}
```
- Use command `gcc hello.c` to compile the program
- Run `./a.out` to execute the binary
-->

### Getting Started with Linux (Continued)
- [Redirect the output to a file](https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file)
### [Access Permission](https://en.wikipedia.org/wiki/File-system_permissions)
- [chmod command](https://www.tutorialspoint.com/unix_commands/chmod.htm)
### grep
- [How To Use grep Command](https://phoenixnap.com/kb/grep-command-linux-unix-examples)
- [A Beginnerâ€™s Guide To Grep](https://www.opensourceforu.com/2012/06/beginners-guide-gnu-grep-basics/)
- search in the dictionary /usr/share/dict/words

<!-- 
### Regular Expressions (regex)
- Powerful tool for searching
- Work through this tutorial on regex: [Regex Tutorial](http://regextutorials.com/intro.html?Basic%20symbols)
-->
<!-- ### Exercise
- Download the `week4_data.csv` file
- This spreadsheet has 4 columns, `lastname`, `firstname`, `email`, `grade`
- Write a command that returns all the entries of students who had an `A` for their `grade`
- Write a command that returns only students whose `lastname` begins with A-L and `grade` is B or higher
- --:
<!---
- Write a command that returns only the `email` and `grade` of students
-->
## Day 4 - Networking: Introduction
<!-- ### Game Time: [The Command Line Murders](https://github.com/veltman/clmystery.git) -->
  - [Sheldon likes Ubuntu](https://youtu.be/X_mzgdQGwY4)
### Networking
- [IP Addresses](https://youtu.be/7_-qWlvQQtY)
- [Network Ports](https://youtu.be/uMwzsh_Dd9Y)
- [Common Ports](http://www.meridianoutpost.com/resources/articles/well-known-tcpip-ports.php)
- [ifconfig](https://goinbigdata.com/demystifying-ifconfig-and-network-interfaces-in-linux/)

#### Insecure Connection
- Telnet, FTP, [RLogin/Rsh](https://sourcedaddy.com/networking/rlogin-rsh-and-rcp.html)

#### Secure Connection
- [SSH](https://youtu.be/v_cVEpESG3g) 
- service ssh status
<!-- 
- /etc/ssh/sshd\_config 
- [SSH Install](https://youtu.be/0KXZ6GnVza8)
- [SSH Keys](https://www.youtube.com/watch?v=EuIYabZS3ow)
- SSH into partner's machine with previously created account
-->
### How to tell what doors (ports and services) are open
- netstat -lntu
- nmap localhost
- [nmap cheat sheet](https://hackertarget.com/nmap-cheatsheet-a-quick-reference-guide/)

### How to detect if someone is on your machine?
- w
- who
- lastlog

### How to kill a process
- ps
- kill
- Put commands in background with `&`
- wget `forever`
<!-- - wget https://github.com/camel-clarkson/CSC/blob/CSC2020/script/forever -->
- wget https://raw.githubusercontent.com/camel-clarkson/CSC/CSC2021s/script/forever
- chmod of the file property
- Run `forever` in background
- Find `forever`'s pid using `ps`
- Kill `forever` with the `kill` command

### Malware
- [Malware](https://youtu.be/juw6sPEGuEk)
- [Virus vs Worm vs Trojan Horse](https://youtu.be/y8a3QoTg4VQ)
- [Ransomware](https://www.youtube.com/watch?v=nNNDrS6-5Vg)

### Intro to Bash Scripting
- We can put series of commands in a script and run it
- Importantly we can store the outputs of commands in variables. Please try the following commands on command line,
```bash
id=$(whoami)
echo $id
```
- We surround commands with `$(...)`
- Variables are referenced with $, i.e., for a variable named `x` to use it we would write `$x`

### Exercise
- Write the following hello world script using the vim editor
- Remember to give the bash script a name, like mytest.sh
```bash
#!/bin/bash

echo "Hello, World!"
```
- Run it by typing
```bash
bash mytest.sh
```
- Another way to run it is to use `chmod` command to make the file executable first then run it.  
- Next, modify the script to ask user to input a name
```bash
#!/bin/bash

echo "Write your name"
read name

echo "Hello, $name"
```
## Day 5 - Make Your Own Website and Server!
<!-- ### [Remote Administration](https://www.youtube.com/watch?v=o-W_mDGX1bY) -->

#### HTML5, CSS, and Javascript
- How does the web work? [video](https://www.youtube.com/watch?v=keo0dglCj7I)
- Cross site scripting attack: [video](https://www.youtube.com/watch?v=zv0kZKC6GAM)
- Create a new directory for this project and navigate to it
- Download `public.tar.gz` from this github repo
- Use the `tar` command to extract the conents and use the `man` command to figure out what flags to use
- The contents of the `public.tar.gz` file contain all the HTML, CSS, and client-side JS for you website
- The main html file is located at `public/index.html`
- Customize your `index.html` to include your name somewhere on the page (hint look for either a `<h1>` or `<h2>` tag)
- Install the express package with `npm install express`
- Create `app.js` in your project directory
- Add the following code to your `app.js` file
```js
// Import express package
var express = require('express');
var app = express();
// specify port number
var port = 8000;

// Handle request to serve main file
app.get('/', function(req, res) {
        // __dirname is the working directory of the project
        res.sendFile(__dirname + '/public/index.html');
});

// allow the server to serve content from public directory
app.use(express.static('public'));

// Set server to listen to `port`
app.listen(port, function() {
        console.log('Server on port: ' + port);
});
```
- Change the port number to one the instructors will give you
- Run the server in the background using the command `node app.js &`
- To see your webpage, open up your preferred web browser and navigate to `http://3.12.96.179:<your-port-number-here>`
- Ensure that you see your web page
- Kill the node server using `kill`

### Bash Scripting Exercises
- Run the command `ps aux`
- Create script to launch node sever in the background
- Create script to kill the node server **you** launched
- Hint, what does the following command do? `ps aux | grep -E "$me.*[0-9][[:space:]]+node app.js" | tr -s ' '| cut -d ' ' -f 2`, where `$me` is variable containing your username. How does it work?
<!-- ### Firewalls
- Practice denying your partner through both port and IP addr.
- [Post Class Survey](https://forms.gle/i3LoSjwZvFU1KZAZA)
-->

